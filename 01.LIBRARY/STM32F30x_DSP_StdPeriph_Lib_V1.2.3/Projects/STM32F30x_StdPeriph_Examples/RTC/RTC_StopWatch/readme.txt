/**
  @page RTC_StopWatch RTC StopWatch Description
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    RTC/RTC_StopWatch/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.2
  * @date    14-August-2015
  * @brief   RTC StopWatch Example Description.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *   
  ******************************************************************************
   @endverbatim

@par Example Description 

  This example illustrates how to simulate a precise chronometer with 5 record 
  times possibilities stored in the Backup registers (5 registers for time (second,
  minutes and hours) and 5 registers for subsecond).
  
  For this example an interactive human interface is developed using LCD and Push 
  Buttons to allow user to use StopWatch with real time display.

  After startup, a default 00:00:00:000 chronometer counter is displayed on the 
  LCD, it corresponds to [Hours]:[minutes]:[seconds]:[milliseconds].
  User can manipulate the chronometer features using Joystick LEFT, RIGHT and SEL buttons:
    - press Joystick LEFT  button to start counter.
    - press Joystick RIGHT button to save trials in the backup registers (max 5 actions).
    - press and hold SEL button for 1 sec to reset all the backup registers.
 
@par Directory contents 

  - RTC/RTC_StopWatch/stm32f30x_conf.h    Library Configuration file
  - RTC/RTC_StopWatch/stm32f30x_it.c      Interrupt handlers
  - RTC/RTC_StopWatch/stm32f30x_it.h      Interrupt handlers header file
  - RTC/RTC_StopWatch/main.c              Main program
  - RTC/RTC_StopWatch/main.h              Main program header file
  - RTC/RTC_StopWatch/system_stm32f30x.c  STM32F30x system source file
  
@note The "system_stm32f30x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F30x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4152 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
 
@par Hardware and Software environment

  - This example runs on STM32F303xC and STM32F303xE Devices.
  
  - This example has been tested with STMicroelectronics STM32303C-EVAL (STM32F30x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.
    
  - STM32303C-EVAL Set-up
    - None.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Projects\STM32F30x_StdPeriph_Templates
 - Open your preferred toolchain
 - Add the following file the project source list
    - Utilities\STM32_EVAL\STM32303C_EVAL\stm32303c_eval.c
    - Utilities\STM32_EVAL\STM32303C_EVAL\stm32303c_eval_lcd.c 
 - Rebuild all files and load your image into target memory
 - Run the example
    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
