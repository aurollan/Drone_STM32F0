/**
  @page EXTI_Example EXTI Configuration Example
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    EXTI/EXTI_Example/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.2
  * @date    14-August-2015
  * @brief   Description of the EXTI example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *   
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure external interrupt lines.
In this example, 3 EXTI lines (EXTI5, EXTI6 and EXTI13) when using the STM32303C-EVAL
are configured to generate an interrupt on each falling or rising edge. 
In the interrupt routine a led connected to a specific GPIO pin is toggled.

In this example
    - EXTI5  is mapped to PD5 
    - EXTI6  is mapped to PE6  
    - EXTI13 is mapped to PC13

After EXTI configuration, a software interrupt is generated on the EXTI5 toggles LED3.
After that,
  when rising edge is detected on EXTI5, LED3 toggles.
  when falling edge is detected on EXTI6, LED1 toggles.
  when rising edge is detected on EXTI13, LED2 toggles.

If STM32303C-EVAL is used,
  when Joystick Down push-button is pressed, LED3 toggles.
  when Key push-button is pressed, LED1 toggles.
  when Joystick Sel push-button is pressed, LED2 toggles.
  
@par Directory contents 

  - EXTI/EXTI_Example/stm32f30x_conf.h    Library Configuration file
  - EXTI/EXTI_Example/stm32f30x_it.c      Interrupt handlers
  - EXTI/EXTI_Example/stm32f30x_it.h      Interrupt handlers header file
  - EXTI/EXTI_Example/main.c              Main program
  - EXTI/EXTI_Example/system_stm32f30x.c  STM32F30x system source file
  
@note The "system_stm32f30x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F30x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4152 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
                
@par Hardware and Software environment

  - This example runs on STM32F303xC and STM32F303xE Devices.
  
  - This example has been tested with STMicroelectronics STM32303C-EVAL (STM32F30x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32303C-EVAL Set-up
    - Use LD1 led connected to PE8 pin
    - Use LD2 led connected to PE9 pin
    - Use LD3 led connected to PE10 pin
    - Use the Key push-button connected to pin PE6 (EXTI Line6)
    - Use the Joystick Sel push-button connected to pin PC13 (EXTI Line13)
    - Use the Joystick Down push-button connected to pin PD5 (EXTI Line5)

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Projects\STM32F30x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Add the following files to the project source list
   - Utilities\STM32_EVAL\STM32303C_EVAL\stm32303c_eval.c
 - Rebuild all files and load your image into target memory
 - Run the example

   
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
