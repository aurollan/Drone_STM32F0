/**
  @page OPAMP_InternalFollower OPAMP used as internal follower
  
  @verbatim
  ******************** (C) COPYRIGHT 2015 STMicroelectronics *******************
  * @file    OPAMP/OPAMP_InternalFollower/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.2
  * @date    14-August-2015
  * @brief   Description of the OPAMP internal follower example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *   
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a short description of how to configure the OPAMP1 in 
internal follower and how to use OPAMP1 output as ADC input.

OPAMP1 is configured in internal follower mode or unity gain;
the applied signal on OPAMP1 positive input (PA7) is reproduced on OPAMP1
output (PA2): the output follows the input.

The ADC1 is configured to convert continuously ADC1 channel 3 (PA2) which is internally
connected to OPAMP1 output. Each time the channel 3 is converted an End Of Conversion
interrupt is generated.
The converted value of regular ADC1 channel 3 can be displayed on live watch.

To run the example:
   - Connect a variable power supply 0-3.3V to OPAMP1 non-inverting input mapped on pin PA7.
   - Connect OPAMP1 output PA2 pin to an oscilloscope. It should be equal to PA7 level.
   - Add "ADCVal" to live watch to display the measured voltage. It should be equal to PA7 level.

@par Directory contents 

  - OPAMP/OPAMP_InternalFollower/stm32f30x_conf.h    Library Configuration file
  - OPAMP/OPAMP_InternalFollower/stm32f30x_it.c      Interrupt handlers
  - OPAMP/OPAMP_InternalFollower/stm32f30x_it.h      Interrupt handlers header file
  - OPAMP/OPAMP_InternalFollower/main.c              Main program
  - OPAMP/OPAMP_InternalFollower/system_stm32f30x.c  STM32F30x system source file
  
@note The "system_stm32f30x.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F30x_Clock_Configuration_V1.0.0.xls" 
      provided with the AN4152 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
        
@par Hardware and Software environment

  - This example runs on STM32F303xC and STM32F303xE Devices.
  
  - This example has been tested with STMicroelectronics STM323303C-EVAL (STM32F30x)
    evaluation board and can be easily tailored to any other supported device 
    and development board.

  - STM32303C-EVAL Set-up
    - Make sure that JP11 is fitted.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Projects\STM32F30x_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
